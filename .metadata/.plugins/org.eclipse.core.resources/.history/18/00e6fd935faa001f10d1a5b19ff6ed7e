package camada_dados;

import entidades.DiscenteDTO;
import entidades.PedidoIntencaoDTO;
import entidades.EmpresaDTO;

import java.util.ArrayList;
import java.util.List;

public class CamadaDadosMock implements CamadaDadosInterface {
    private final List<Discente> discentes;
    private final List<PedidoIntencao> pedidos;
    private final List<Empresa> empresas;

    public CamadaDadosMock() {
        discentes = new ArrayList<>();
        pedidos = new ArrayList<>();
        empresas = new ArrayList<>();

        // Mock de dados para Discentes
        discentes.add(new Discente(1, "JoÃ£o Silva", "20220001", "8.5", "300"));
        discentes.add(new Discente(2, "Maria Oliveira", "20220002", "7.9", "280"));

        // Mock de dados para Empresas
        empresas.add(new Empresa(1, "Tech Solutions", "Rua A, 123", "12345678000100"));
        empresas.add(new Empresa(2, "SoftDev Corp", "Av. Central, 45", "98765432000100"));
    }

    @Override
    public Discente buscarDiscentePorId(int idDiscente) {
        return discentes.stream()
                .filter(d -> d.getId() == idDiscente)
                .findFirst()
                .orElse(null);
    }

    @Override
    public List<PedidoIntencao> buscarPedidosPorDiscente(int idDiscente) {
        List<PedidoIntencao> pedidosDoDiscente = new ArrayList<>();
        for (PedidoIntencao pedido : pedidos) {
            if (pedido.getIdDiscente() == idDiscente) {
                pedidosDoDiscente.add(pedido);
            }
        }
        return pedidosDoDiscente;
    }

    @Override
    public Empresa buscarEmpresaPorId(int idEmpresa) {
        return empresas.stream()
                .filter(e -> e.getId() == idEmpresa)
                .findFirst()
                .orElse(null);
    }

    @Override
    public void salvarPedidoIntencao(PedidoIntencao pedido) {
        pedidos.add(pedido);
    }
}
